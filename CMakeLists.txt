cmake_minimum_required(VERSION 3.7)
project(moderncpp)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -Wextra -O3 -std=c++17")

set(BOOST_ROOT "E:/opt/boost_1_63_0")
set(Boost_INCLUDE_DIR "E:/opt/boost_1_63_0")

#set(Boost_USE_STATIC_LIBS ON)
#set(Boost_USE_MULTITHREADED ON)
#set(Boost_USE_STATIC_RUNTIME ON)

find_package(Boost REQUIRED#[[ filesystem system]])
if(Boost_FOUND)
    message(STATUS "It works!")
    message("boostlib = " ${Boost_LIBRARIES})
    set(Boost_USE_STATIC_LIBS ON)
    set(Boost_USE_MULTITHREADED ON)
    set(Boost_USE_STATIC_RUNTIME ON)
    link_directories(${Boost_LIBRARY_DIRS})
    include_directories(${Boost_INCLUDE_DIRS})
endif()
if (NOT Boost_FOUND)
    message(FATAL_ERROR "Could not find boost!")
endif ()

include_directories(${Boost_INCLUDE_DIRS})

add_executable(acquireConsume source/acquireConsume.cpp)
add_executable(acquireRelease source/acquireRelease.cpp)
add_executable(acquireReleaseFences source/acquireReleaseFences.cpp)
add_executable(acquireReleaseWithoutWaiting source/acquireReleaseWithoutWaiting.cpp)
add_executable(acquireReleaseWithWaiting source/acquireReleaseWithWaiting.cpp)
add_executable(algorithm source/algorithm.cpp)
add_executable(all_ source/all.cpp)
add_executable(allocate source/allocate.cpp)
#add_executable(any source/any.cpp)
add_executable(array source/array.cpp)
add_executable(associativeCompare source/associativeCompare.cpp)
add_executable(async source/async.cpp)
add_executable(asyncLazy source/asyncLazy.cpp)
add_executable(atomicCondition source/atomicCondition.cpp)
add_executable(auto source/auto.cpp)
add_executable(autoGetType source/autoGetType.cpp)
add_executable(autoTypeDeduction source/autoTypeDeduction.cpp)
#add_executable(average source/average.cpp)
add_executable(bindAndFunction source/bindAndFunction.cpp)
add_executable(blocking source/blocking.cpp)
add_executable(blockJoin source/blockJoin.cpp)
#add_executable(calculateWithAtomic source/calculateWithAtomic.cpp)
add_executable(calculateWithLock source/calculateWithLock.cpp)
add_executable(calculateWithLoop source/calculateWithLoop.cpp)
add_executable(calculateWithStd source/calculateWithStd.cpp)
add_executable(callOnce source/callOnce.cpp)
add_executable(cArray source/cArray.cpp)
add_executable(clockProperties source/clockProperties.cpp)
add_executable(compare source/compare.cpp)
#add_executable(conceptsDefinitionEqual source/conceptsDefinitionEqual.cpp)
#add_executable(conceptsDefinitionOrd source/conceptsDefinitionOrd.cpp)
#add_executable(conceptsIntegral source/conceptsIntegral.cpp)
#add_executable(conceptsIntegralVariations source/conceptsIntegralVariations.cpp)
#add_executable(conceptsPlaceholder source/conceptsPlaceholder.cpp)
add_executable(conditionVariable source/conditionVariable.cpp)
add_executable(conditionVariableFixed source/conditionVariableFixed.cpp)
add_executable(constexpr11 source/constexpr11.cpp)
add_executable(constexpr14 source/constexpr14.cpp)
add_executable(copyFallbackMove source/copyFallbackMove.cpp)
#add_executable(coutSynchronized source/coutSynchronized.cpp)
add_executable(coutUnsynchronized source/coutUnsynchronized.cpp)
add_executable(createThread source/createThread.cpp)
add_executable(crtp source/crtp.cpp)
add_executable(crtpEquality source/crtpEquality.cpp)
add_executable(cycle source/cycle.cpp)
add_executable(deadlock source/deadlock.cpp)
add_executable(deadlockResolved source/deadlockResolved.cpp)
add_executable(dispatchTable source/dispatchTable.cpp)
add_executable(dotProductAsync source/dotProductAsync.cpp)
add_executable(enableShared source/enableShared.cpp)
add_executable(enum source/enum.cpp)
add_executable(enumCast source/enumCast.cpp)
add_executable(enumClassic source/enumClassic.cpp)
add_executable(enumType source/enumType.cpp)
add_executable(evolutionOfFunctions source/evolutionOfFunctions.cpp)
add_executable(factorial source/factorial.cpp)
add_executable(fetch_mult source/fetch_mult.cpp)
#add_executable(filesystem source/filesystem.cpp)
#add_executable(fileTime source/fileTime.cpp)
add_executable(fill source/fill.cpp)
#add_executable(final source/final.cpp)
add_executable(foldExpression source/foldExpression.cpp)
add_executable(foldExpressionAll source/foldExpressionAll.cpp)
add_executable(foldExpressions source/foldExpressions.cpp)
#add_executable(functionCompositionRanges source/functionCompositionRanges.cpp)
#add_executable(gcd source/gcd.cpp)
#add_executable(gcd_2 source/gcd_2.cpp)
#add_executable(gcd_3_common source/gcd_3_common.cpp)
#add_executable(gcd_3_smaller source/gcd_3_smaller.cpp)
#add_executable(gcd_4 source/gcd_4.cpp)
add_executable(generalizedLambda source/generalizedLambda.cpp)
add_executable(generic source/generic.cpp)
add_executable(greedyGenerator source/greedyGenerator.cpp)
add_executable(hashFunction source/hashFunction.cpp)
#add_executable(init source/init.cpp)
add_executable(initAuto source/initAuto.cpp)
add_executable(inline source/inline.cpp)
add_executable(integral source/integral.cpp)
add_executable(keywords source/keywords.cpp)
add_executable(lambdaAndAuto source/lambdaAndAuto.cpp)
add_executable(lazy source/lazy.cpp)
#add_executable(lazyEvaluation source/lazyEvaluation.cpp)
#add_executable(lazyGenerator source/lazyGenerator.cpp)
add_executable(literals source/literals.cpp)
add_executable(localVariable source/localVariable.cpp)
add_executable(localVariableAtomic source/localVariableAtomic.cpp)
add_executable(localVariableAtomicRelaxed source/localVariableAtomicRelaxed.cpp)
add_executable(macro source/macro.cpp)
add_executable(mapHashCompare source/mapHashCompare.cpp)
add_executable(moveAlgorithm source/moveAlgorithm.cpp)
add_executable(movePerformance source/movePerformance.cpp)
add_executable(mutex source/mutex.cpp)
add_executable(narrowing source/narrowing.cpp)
#add_executable(narrowingSolved source/narrowingSolved.cpp)
add_executable(nativeDuration source/nativeDuration.cpp)
#add_executable(nonsynchronized source/nonsynchronized.cpp)
add_executable(notBlocking source/notBlocking.cpp)
add_executable(now source/now.cpp)
add_executable(null source/null.cpp)
add_executable(nullMacro source/nullMacro.cpp)
add_executable(nullptr source/nullptr.cpp)
add_executable(ongoingOptimization source/ongoingOptimization.cpp)
add_executable(ongoingOptimizationAcquireRelease source/ongoingOptimizationAcquireRelease.cpp)
add_executable(ongoingOptimizationAcquireReleaseBroken source/ongoingOptimizationAcquireReleaseBroken.cpp)
add_executable(ongoingOptimizationLock source/ongoingOptimizationLock.cpp)
add_executable(ongoingOptimizationRelaxedSemantic source/ongoingOptimizationRelaxedSemantic.cpp)
add_executable(OngoingOptimizationSequentialConsistency source/OngoingOptimizationSequentialConsistency.cpp)
add_executable(ongoingOptimizationVolatile source/ongoingOptimizationVolatile.cpp)
add_executable(optional source/optional.cpp)
#add_executable(ordering source/ordering.cpp)
add_executable(overloadOperatorNewAndDelete source/overloadOperatorNewAndDelete.cpp)
add_executable(overloadOperatorNewAndDelete2 source/overloadOperatorNewAndDelete2.cpp)
#add_executable(override source/override.cpp)
add_executable(packagedTask source/packagedTask.cpp)
add_executable(packagedTaskHardwareConcurrency source/packagedTaskHardwareConcurrency.cpp)
#add_executable(parse source/parse.cpp)
add_executable(parseResolved source/parseResolved.cpp)
#add_executable(perfectForwarding1 source/perfectForwarding1.cpp)
add_executable(perfectForwarding2 source/perfectForwarding2.cpp)
add_executable(perfectForwarding3 source/perfectForwarding3.cpp)
add_executable(perfectForwarding4 source/perfectForwarding4.cpp)
add_executable(performanceRefCopyShared source/performanceRefCopyShared.cpp)
#add_executable(perms source/perms.cpp)
#add_executable(placeholders source/placeholders.cpp)
add_executable(pod source/pod.cpp)
add_executable(primaryTypeCategories source/primaryTypeCategories.cpp)
add_executable(producerConsumer source/producerConsumer.cpp)
add_executable(promiseFuture source/promiseFuture.cpp)
add_executable(promiseFutureSynchronize source/promiseFutureSynchronize.cpp)
add_executable(pureFunctions source/pureFunctions.cpp)
add_executable(raii source/raii.cpp)
#add_executable(rangeComprehension source/rangeComprehension.cpp)
add_executable(readerWriterLock source/readerWriterLock.cpp)
add_executable(readWriteAcquireRace source/readWriteAcquireRace.cpp)
add_executable(readWriteAcquireRelaxedSemantik source/readWriteAcquireRelaxedSemantik.cpp)
add_executable(readWriteAcquireReleaseSemantik source/readWriteAcquireReleaseSemantik.cpp)
add_executable(readWriteLocks source/readWriteLocks.cpp)
add_executable(readWriteSequentiellConsistency source/readWriteSequentiellConsistency.cpp)
add_executable(readWriteUnsynchronized source/readWriteUnsynchronized.cpp)
add_executable(readWriteVolatile source/readWriteVolatile.cpp)
add_executable(refact source/refact.cpp)
add_executable(refactAuto source/refactAuto.cpp)
add_executable(refVersusCopySharedPtr source/refVersusCopySharedPtr.cpp)
add_executable(rehash source/rehash.cpp)
add_executable(relaxed source/relaxed.cpp)
add_executable(removeConst source/removeConst.cpp)
add_executable(schoolDay source/schoolDay.cpp)
add_executable(scoped_thread source/scoped_thread.cpp)
add_executable(sharedDuration source/sharedDuration.cpp)
add_executable(sharedDurationMake source/sharedDurationMake.cpp)
add_executable(sharedFuture source/sharedFuture.cpp)
add_executable(sharedPtr source/sharedPtr.cpp)
add_executable(sharedPtrDeleter source/sharedPtrDeleter.cpp)
add_executable(singletonAcquireRelease source/singletonAcquireRelease.cpp)
add_executable(singletonCallOnce source/singletonCallOnce.cpp)
add_executable(singletonLock source/singletonLock.cpp)
add_executable(singletonMeyers source/singletonMeyers.cpp)
add_executable(singletonSequentialConsistency source/singletonSequentialConsistency.cpp)
add_executable(singletonSingleThreaded source/singletonSingleThreaded.cpp)
add_executable(sizeof source/sizeof.cpp)
add_executable(sleepAndWait source/sleepAndWait.cpp)
#add_executable(space source/space.cpp)
add_executable(spinLock source/spinLock.cpp)
add_executable(spinlockAcquireRelease source/spinlockAcquireRelease.cpp)
add_executable(spinLockSleep source/spinLockSleep.cpp)
add_executable(sso source/sso.cpp)
#add_executable(static_assert source/static_assert.cpp)
add_executable(stringAndVector source/stringAndVector.cpp)
#add_executable(stringView source/stringView.cpp)
add_executable(string_view source/string_view.cpp)
#add_executable(substr source/substr.cpp)
add_executable(synchronizationWithAtomic source/synchronizationWithAtomic.cpp)
add_executable(synchronizationWithFetchAdd source/synchronizationWithFetchAdd.cpp)
add_executable(synchronizationWithFetchAddRelaxed source/synchronizationWithFetchAddRelaxed.cpp)
add_executable(synchronizationWithLock source/synchronizationWithLock.cpp)
#add_executable(synchronized source/synchronized.cpp)
add_executable(tasks source/tasks.cpp)
add_executable(templateArgumentDeduction source/templateArgumentDeduction.cpp)
#add_executable(templateIntroduction source/templateIntroduction.cpp)
#add_executable(templateIntroductionGeneric source/templateIntroductionGeneric.cpp)
add_executable(threadArguments source/threadArguments.cpp)
add_executable(threadLocal source/threadLocal.cpp)
add_executable(threadMoved source/threadMoved.cpp)
add_executable(threadMovedFixed source/threadMovedFixed.cpp)
add_executable(threadWithJoin source/threadWithJoin.cpp)
add_executable(threadWithoutJoin source/threadWithoutJoin.cpp)
add_executable(timepoint source/timepoint.cpp)
add_executable(timepointAddition source/timepointAddition.cpp)
add_executable(timeSinceEpoch source/timeSinceEpoch.cpp)
add_executable(transitivity source/transitivity.cpp)
#add_executable(trigraphs source/trigraphs.cpp)
add_executable(trigraphsLambda source/trigraphsLambda.cpp)
add_executable(uniformInitialization source/uniformInitialization.cpp)
add_executable(uniqueDuration source/uniqueDuration.cpp)
add_executable(uniqueDurationMake source/uniqueDurationMake.cpp)
add_executable(uniquePtr source/uniquePtr.cpp)
add_executable(uniquePtrArray source/uniquePtrArray.cpp)
add_executable(userdefinedLiterals source/userdefinedLiterals.cpp)
add_executable(userdefinedLiteralsConstexpr source/userdefinedLiteralsConstexpr.cpp)
#add_executable(userdefinedTypes source/userdefinedTypes.cpp)
#add_executable(variant source/variant.cpp)
add_executable(vectorArithmeticExpressionTemplates source/vectorArithmeticExpressionTemplates.cpp)
add_executable(vectorArithmeticOperatorOverloading source/vectorArithmeticOperatorOverloading.cpp)
add_executable(weakPtr source/weakPtr.cpp)

#target_link_libraries(moderncpp ${Boost_LIBRARIES})
#add_dependencies(gilead_fix8 ${Boost_LIBRARIES})
